#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC               &kp Q           &kp W           &kp E        &kp R             &kp T                               &kp UP                &kp Y        &kp U              &kp I          &kp O            &kp P               &kp LEFT_BRACKET
&kp TAB               &mt LEFT_WIN A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &mt RIGHT_SHIFT J  &mt RCTRL K    &mt RIGHT_ALT L  &mt RIGHT_WIN SEMI  &kp SQT
&kp NON_US_BACKSLASH  &kp Z           &kp X           &kp C        &kp V             &kp B        &kp SPACE              &kp DOWN              &kp N        &kp M              &kp COMMA      &kp DOT          &kp SLASH           &kp QUESTION
                                                      &kp ESC      &mo 2             &lt 3 SPACE                                               &lt 3 ENTER  &mo 1              &kp BACKSPACE
            >;

            // sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            sensor-bindings = <&inc_dec_kp N2 N1>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5  &kp NUMBER_6                                &mmv MOVE_UP                     &kp N7    &kp N8                &kp N9              &kp N0               &kp MINUS           &kp EQUAL
&trans        &trans        &trans        &trans        &trans  &trans                      &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT  &mt RIGHT_SHIFT DOWN  &mt RCTRL UP_ARROW  &mt RIGHT_ALT RIGHT  &mt RIGHT_WIN HOME  &kp PG_UP
&trans        &trans        &trans        &trans        &trans  &trans        &kp C_MUTE                    &mmv MOVE_DOWN                   &trans    &trans                &trans              &kp INSERT           &kp END             &kp PG_DN
                                          &trans        &trans  &trans                                                                       &kp INS   &trans                &kp DEL
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL  &kp AT     &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &trans    &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans    &trans     &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &trans     &trans     &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&kp F1       &kp F2     &kp F3        &kp F4     &kp F5     &kp F6                                  &mmv MOVE_UP                     &kp F7          &kp F8            &kp F9      &kp F10          &kp F11         &kp F12
&trans       &trans     &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans          &mkp LCLK         &mkp MCLK   &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK
&bootloader  &soft_off  &out OUT_TOG  &trans     &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp LS(C_PREV)  &kp C_PLAY_PAUSE  &kp C_NEXT  &trans           &trans          &bootloader
                                      &trans     &trans     &trans                                                                   &trans          &trans            &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        settings {
            bindings = <
&ext_power EP_TOG  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &soft_off                          &trans              &soft_off     &trans  &trans  &trans  &trans          &ext_power EP_TOG
&sys_reset         &trans        &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF            &trans  &bt BT_CLR  &trans  &trans        &trans  &trans  &trans  &trans          &sys_reset
&bootloader        &trans        &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_TOG  &trans            &trans              &out OUT_TOG  &trans  &trans  &trans  &studio_unlock  &bootloader
                                                  &trans           &trans           &trans                                                 &trans        &trans  &trans
            >;

            label = "SETTINGS";
            sensor-bindings = <&rgb_encoder>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        settings-layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};
